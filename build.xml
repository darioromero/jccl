<?xml version="1.0"?>

    <!--
    - Cobol Conversion Framework
	- File: build.xml
	- Description: Apache-Ant build file
	- Author: Travis Meisenheimer
	- Date: October 20, 2006
	-
	-->

<project name="coboltojava-core" default="usage" basedir=".">
	<property file="build.properties"/>

	<!--
		Set up properties that indicate whether we're building on JDK 1.5.
		Currently simply checks whether the Java version is not 1.3 or 1.4,
		due to the lack of a greater-than comparator in Ant.
	-->

	<condition property="tiger.available">
		<not>
			<or>
				<equals arg1="${ant.java.version}" arg2="1.3"/>
				<equals arg1="${ant.java.version}" arg2="1.4"/>
			</or>
		</not>
	</condition>

	<condition property="tiger.unavailable">
		<or>
			<equals arg1="${ant.java.version}" arg2="1.3"/>
			<equals arg1="${ant.java.version}" arg2="1.4"/>
		</or>
	</condition>

	<path id="all-libs">
		<fileset dir="${lib.dir}">
			<include name="**/*"/>
		</fileset>
	</path>

	<target name="usage">
		<echo message=""/>
		<echo message="${app-title} build script"/>
		<echo message="-----------------------------------------"/>
		<echo message=""/>
		<echo message="${app-title}: ${app-version}"/>
		<echo message=""/>
		<echo message="Among the available targets are:"/>
		<echo message=""/>
		<echo message="build       ==> build src; don't create JARs"/>
		<echo message="buildtests  ==> build tests; don't create JARs"/>
		<echo message="testjars    ==> create all test JAR files"/>
		<echo message="appjars     ==> create all app JAR files"/>
		<echo message="alljars     ==> create all JAR files"/>
		<echo message="jarzipdeps  ==> create all JAR files, zip up required libs"/>
		<echo message="clean       ==> cleans all output dirs"/>
		<echo message="javadoc     ==> generate the javadocs"/>
		<echo message="release     ==> compile source, build dist jars, gzip source, build docs"/>
		<echo message=""/>
		<echo message="runtests-plain    ==> run JUnit tests without html output" />
		<echo message="runtests-html     ==> run JUnit tests with html output" />
		<echo message=""/>
	</target>

	<target name="clean" description="Clean all output dirs (dist, javadocs, classes, test-classes, etc)">
		<delete dir="${target.classes.dir}"/>
		<delete dir="${test.target.classes.dir}"/>
		<delete dir="${target.release.dir}"/>
		<delete dir="${target.otherclasses.dir}"/>
		<!-- Just kill target dir (it's safer). No need at this point to keep it. -->
		<delete dir="${junit.reports.dir}"/>
		<delete dir="${test.target.dir}"/>
		<delete dir="${target.dir}"/>
		<delete dir="${dist.dir}"/>
		<delete dir="${javadoc.dir}"/>
	</target>

	<target name="build" depends="" description="Compile main source tree java files into class files">
		<mkdir dir="${target.classes.dir}"/>
		<mkdir dir="${target.classes.dir}/META-INF"/>
		<javac destdir="${target.classes.dir}" source="1.4" target="1.4" debug="${debug}" deprecation="true" optimize="false" failonerror="true">
			<src path="${src.dir}"/>
			<!-- Include Commons Attributes generated Java sources -->
			<classpath refid="all-libs"/>
		</javac>
		<copy todir="${target.classes.dir}" preservelastmodified="true">
			<fileset dir="${src.dir}">
				<include name="**/*.properties"/>
				<include name="**/*.xml"/>
			</fileset>
		</copy>
	</target>

	<target name="initdist" description="Initialize the distribution directory">
		<mkdir dir="${dist.dir}"/>
	</target>


	<target name="buildtests" depends="build" description="Compile main source tree java files into class files">
		<mkdir dir="${test.target.classes.dir}"/>
		<mkdir dir="${test.target.classes.dir}/META-INF"/>
		<javac destdir="${test.target.classes.dir}" source="1.4" target="1.4" debug="${debug}" deprecation="true" optimize="false" failonerror="true">
			<src path="${test.src.dir}"/>
			<classpath refid="all-libs"/>
			<classpath location="${target.classes.dir}" />
		</javac>
		<copy todir="${test.target.classes.dir}" preservelastmodified="true">
			<fileset dir="${test.src.dir}">
				<include name="**/*.properties"/>
				<include name="**/*.xml"/>
			</fileset>
		</copy>
	</target>

	<target name="appjars" depends="build,initdist" description="Create full JAR file with all application classes">
		<delete file="${dist.dir}/${target.jar}"/>
		<jar jarfile="${dist.dir}/${target.jar}">
			<fileset dir="${target.classes.dir}">
				<include name="META-INF/**"/>
				<include name="com/indexoutofbounds/**"/>
				<include name="**/*.properties"/>
				<include name="**/*.xml"/>
			</fileset>
			<manifest>
				<attribute name="Implementation-Title" value="${app-title}"/>
				<attribute name="Implementation-Version" value="${app-version}"/>
				<attribute name="App-Version" value="${app-version}"/>
				<attribute name="Sealed" value="true" />
				<attribute name="Main-Class" value="gov.usps.vois.interfaces.test.AppTest" />
			</manifest>
		</jar>
	</target>


	<target name="testjars" depends="buildtests,initdist" description="Create full JAR file with all test classes">
		<delete file="${dist.dir}/${test.target.jar}"/>
		<jar jarfile="${dist.dir}/${test.jar}">
			<fileset dir="${test.target.classes.dir}">
				<include name="**/*"/>
			</fileset>
		</jar>
	</target>

	<target name="alljars" depends="appjars,testjars" description="Create all JAR files"/>

	<target name="clean_alljars" depends="clean, alljars"/>

	<target name="jarzipdeps" depends="alljars,ziplibs" description="Create full JAR file, create zip file of requires libraries"/>

	<target name="ziplibs" description="Zip up required libraries" >

		<zip zipfile="${dist.dir}/${lib.zip}">
			<zipfileset dir="." prefix="${release.path}">
				<include name="lib/*.zip"/>
				<include name="lib/*.jar"/>
				<include name="lib/*.properties"/>
			</zipfileset>
		</zip>

	</target>

	<!--
		Generate javadoc on JDK 1.4, excluding the JDK 1.5 source tree.
	-->
	<target name="javadoc14" description="Generate framework Javadocs on JDK 1.4" if="tiger.unavailable">

		<delete dir="${javadoc.dir}"/>
		<mkdir dir="${javadoc.dir}"/>

		<javadoc sourcepath="${src.dir}" destdir="${javadoc.dir}" windowtitle="${app-title}"
						 source="1.3" access="package" author="true" version="true" use="true" defaultexcludes="true">
			<arg value="-breakiterator"/>
			<arg value="${javadoc.proxyhost}"/>
			<arg value="${javadoc.proxyport}"/>
			<doctitle><![CDATA[<h1>${javadoc.windowtitle}</h1>]]></doctitle>
			<bottom><![CDATA[<i>${javadoc.copy}</i>]]></bottom>
			<classpath refid="all-libs"/>
			<packageset dir="${src.dir}">
				<include name="com/indexoutofbounds/**"/>
			</packageset>
			<!-- Unfortunately, jDocs have switched off their package listing, so we can't link to jDocs :( -->
			<link href="http://java.sun.com/j2ee/1.4/docs/api"/>
			<link href="http://java.sun.com/j2se/1.4.2/docs/api"/>
			<link href="http://www.hibernate.org/hib_docs/api/"/>
			<link href="http://www.springframework.org/api/"/>
			<link href="http://jakarta.apache.org/commons/collections/apidocs-COLLECTIONS_3_0/"/>
			<link href="http://jakarta.apache.org/commons/dbcp/apidocs/"/>
			<link href="http://jakarta.apache.org/commons/fileupload/apidocs/"/>
			<link href="http://jakarta.apache.org/commons/httpclient/apidocs/"/>
			<link href="http://jakarta.apache.org/commons/logging/api/"/>
			<link href="http://jakarta.apache.org/commons/pool/apidocs/"/>
			<link href="http://logging.apache.org/log4j/docs/api/"/>
		</javadoc>

	</target>


	<target name="javadoc15" description="Generate framework Javadocs on JDK 1.5" if="tiger.available">

		<delete dir="${javadoc.dir}"/>
		<mkdir dir="${javadoc.dir}"/>

		<javadoc sourcepath="${src.dir}" destdir="${javadoc.dir}" windowtitle="${app-title}"
						 source="1.5" access="package" author="true" version="true" use="true" defaultexcludes="true">
			<arg value="-breakiterator"/>
			<arg value="${javadoc.proxyhost}"/>
			<arg value="${javadoc.proxyport}"/>
			<doctitle><![CDATA[<h1>${javadoc.windowtitle}</h1>]]></doctitle>
			<bottom><![CDATA[<i>${javadoc.copy}</i>]]></bottom>
			<classpath refid="all-libs"/>
			<packageset dir="${src.dir}">
				<include name="com/indexoutofbounds/**"/>
			</packageset>
			<!-- Unfortunately, jDocs have switched off their package listing, so we can't link to jDocs :( -->
			<link href="http://java.sun.com/j2ee/1.4/docs/api"/>
			<link href="http://java.sun.com/j2se/1.5.0/docs/api"/>
			<link href="http://www.hibernate.org/hib_docs/api/"/>
			<link href="http://www.springframework.org/api/"/>
			<link href="http://jakarta.apache.org/commons/collections/apidocs-COLLECTIONS_3_0/"/>
			<link href="http://jakarta.apache.org/commons/dbcp/apidocs/"/>
			<link href="http://jakarta.apache.org/commons/fileupload/apidocs/"/>
			<link href="http://jakarta.apache.org/commons/httpclient/apidocs/"/>
			<link href="http://jakarta.apache.org/commons/logging/api/"/>
			<link href="http://jakarta.apache.org/commons/pool/apidocs/"/>
			<link href="http://logging.apache.org/log4j/docs/api/"/>
		</javadoc>

	</target>


	<!--
		Generate javadoc on either JDK 1.4 or JDK 1.5.
	-->
	<target name="javadoc" depends="javadoc14,javadoc15" description="Generate framework Javadocs"/>




	<target name="release" depends="alljars,javadoc" description="Generate release zips">

		<echo message="${app-title} ==> Building release package"/>
		<echo message="Version ==> ${app-version} " />

		<mkdir dir="${target.release.dir}"/>

		<delete file="${target.release.dir}/${release.zip}"/>
		<delete file="${target.release.dir}/${release-with-dependencies.zip}"/>

		<fileset id="main" dir=".">
			<include name="dist/*.jar"/>
			<include name="docs/**"/>
			<include name="src/**"/>
			<include name="*.xml"/>
			<include name="*.properties"/>
		</fileset>

		<zip zipfile="${target.release.dir}/${release.zip}">
			<zipfileset refid="main" prefix="${release.path}"/>
		</zip>

		<zip zipfile="${target.release.dir}/${release-with-dependencies.zip}">
			<zipfileset refid="main" prefix="${release.path}"/>
			<zipfileset dir="." prefix="${release.path}">
				<include name="lib/**"/>
			</zipfileset>
		</zip>
	</target>

	<target name="runtests-plain" depends="alljars" description="Runs all JUnit tests" >
		<mkdir dir="${junit.reports.dir}" />
		<junit forkmode="perBatch" printsummary="yes" haltonfailure="yes" haltonerror="yes">
			<classpath location="${target.classes.dir}" />
			<classpath location="${test.target.classes.dir}" />
			<classpath location="${test.src.dir}" />
			<classpath refid="all-libs" />
			
			<formatter type="plain" usefile="true" />
			<batchtest fork="yes" todir="${junit.reports.dir}" >	
				<fileset dir="${test.target.classes.dir}" includes="${test.includes}" excludes="${test.excludes}" />
			</batchtest>
		</junit>
	</target>

	<target name="runtests-html" depends="alljars" description="Runs all JUnit tests" >
		<mkdir dir="${junit.reports.dir}" />
		<junit forkmode="perBatch" printsummary="yes" haltonfailure="yes" haltonerror="yes">
			<classpath location="${target.classes.dir}" />
			<classpath location="${test.target.classes.dir}" />
			<classpath location="${test.src.dir}" />
			<classpath refid="all-libs" />
			
			<formatter type="xml" usefile="true" />
			<batchtest fork="yes" todir="${junit.reports.dir}" >	
				<fileset dir="${test.target.classes.dir}" includes="${test.includes}" excludes="${test.excludes}" />
			</batchtest>
		</junit>

		<junitreport todir="${junit.reports.dir}" >
		    <fileset dir="${junit.reports.dir}">
      		    	<include name="TEST-*.xml" />
    		    </fileset>
    		    <report todir="${junit.reports.dir}" />
		</junitreport>
	</target>

</project>
